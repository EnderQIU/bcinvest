/*
 * This file is generated by jOOQ.
*/
package com.generator;


import com.generator.tables.Accesstoken;
import com.generator.tables.Authorization;
import com.generator.tables.Company;
import com.generator.tables.Companyaddress;
import com.generator.tables.Credit;
import com.generator.tables.Fundamentalcertificate;
import com.generator.tables.Guaranty;
import com.generator.tables.Guarantystateupdatetask;
import com.generator.tables.House;
import com.generator.tables.Land;
import com.generator.tables.Machine;
import com.generator.tables.Message;
import com.generator.tables.Protocol;
import com.generator.tables.Report;
import com.generator.tables.Securitiesinformation;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bcinvest extends SchemaImpl {

    private static final long serialVersionUID = 947671877;

    /**
     * The reference instance of <code>bcinvest</code>
     */
    public static final Bcinvest BCINVEST = new Bcinvest();

    /**
     * The table <code>bcinvest.Accesstoken</code>.
     */
    public final Accesstoken ACCESSTOKEN = com.generator.tables.Accesstoken.ACCESSTOKEN;

    /**
     * The table <code>bcinvest.Authorization</code>.
     */
    public final Authorization AUTHORIZATION = com.generator.tables.Authorization.AUTHORIZATION;

    /**
     * The table <code>bcinvest.Company</code>.
     */
    public final Company COMPANY = com.generator.tables.Company.COMPANY;

    /**
     * The table <code>bcinvest.CompanyAddress</code>.
     */
    public final Companyaddress COMPANYADDRESS = com.generator.tables.Companyaddress.COMPANYADDRESS;

    /**
     * The table <code>bcinvest.Credit</code>.
     */
    public final Credit CREDIT = com.generator.tables.Credit.CREDIT;

    /**
     * The table <code>bcinvest.FundamentalCertificate</code>.
     */
    public final Fundamentalcertificate FUNDAMENTALCERTIFICATE = com.generator.tables.Fundamentalcertificate.FUNDAMENTALCERTIFICATE;

    /**
     * The table <code>bcinvest.Guaranty</code>.
     */
    public final Guaranty GUARANTY = com.generator.tables.Guaranty.GUARANTY;

    /**
     * The table <code>bcinvest.GuarantyStateUpdateTask</code>.
     */
    public final Guarantystateupdatetask GUARANTYSTATEUPDATETASK = com.generator.tables.Guarantystateupdatetask.GUARANTYSTATEUPDATETASK;

    /**
     * The table <code>bcinvest.House</code>.
     */
    public final House HOUSE = com.generator.tables.House.HOUSE;

    /**
     * The table <code>bcinvest.Land</code>.
     */
    public final Land LAND = com.generator.tables.Land.LAND;

    /**
     * The table <code>bcinvest.Machine</code>.
     */
    public final Machine MACHINE = com.generator.tables.Machine.MACHINE;

    /**
     * The table <code>bcinvest.Message</code>.
     */
    public final Message MESSAGE = com.generator.tables.Message.MESSAGE;

    /**
     * The table <code>bcinvest.Protocol</code>.
     */
    public final Protocol PROTOCOL = com.generator.tables.Protocol.PROTOCOL;

    /**
     * The table <code>bcinvest.Report</code>.
     */
    public final Report REPORT = com.generator.tables.Report.REPORT;

    /**
     * The table <code>bcinvest.Securitiesinformation</code>.
     */
    public final Securitiesinformation SECURITIESINFORMATION = com.generator.tables.Securitiesinformation.SECURITIESINFORMATION;

    /**
     * No further instances allowed
     */
    private Bcinvest() {
        super("bcinvest", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Accesstoken.ACCESSTOKEN,
            Authorization.AUTHORIZATION,
            Company.COMPANY,
            Companyaddress.COMPANYADDRESS,
            Credit.CREDIT,
            Fundamentalcertificate.FUNDAMENTALCERTIFICATE,
            Guaranty.GUARANTY,
            Guarantystateupdatetask.GUARANTYSTATEUPDATETASK,
            House.HOUSE,
            Land.LAND,
            Machine.MACHINE,
            Message.MESSAGE,
            Protocol.PROTOCOL,
            Report.REPORT,
            Securitiesinformation.SECURITIESINFORMATION);
    }
}

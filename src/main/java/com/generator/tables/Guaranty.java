/*
 * This file is generated by jOOQ.
*/
package com.generator.tables;


import com.generator.Bcinvest;
import com.generator.Indexes;
import com.generator.Keys;
import com.generator.tables.records.GuarantyRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Guaranty extends TableImpl<GuarantyRecord> {

    private static final long serialVersionUID = 1052651358;

    /**
     * The reference instance of <code>bcinvest.Guaranty</code>
     */
    public static final Guaranty GUARANTY = new Guaranty();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GuarantyRecord> getRecordType() {
        return GuarantyRecord.class;
    }

    /**
     * The column <code>bcinvest.Guaranty.id</code>.
     */
    public final TableField<GuarantyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>bcinvest.Guaranty.company_id</code>.
     */
    public final TableField<GuarantyRecord, String> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Guaranty.state</code>.
     */
    public final TableField<GuarantyRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Guaranty.right_scope</code>.
     */
    public final TableField<GuarantyRecord, String> RIGHT_SCOPE = createField("right_scope", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Guaranty.owner_name</code>.
     */
    public final TableField<GuarantyRecord, String> OWNER_NAME = createField("owner_name", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Guaranty.report_id</code>.
     */
    public final TableField<GuarantyRecord, String> REPORT_ID = createField("report_id", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Guaranty.type</code>. Machine,home,land
     */
    public final TableField<GuarantyRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(45), this, "Machine,home,land");

    /**
     * The column <code>bcinvest.Guaranty.evaluate_value</code>.
     */
    public final TableField<GuarantyRecord, Integer> EVALUATE_VALUE = createField("evaluate_value", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bcinvest.Guaranty.name</code>.
     */
    public final TableField<GuarantyRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Guaranty.producer</code>. machine
     */
    public final TableField<GuarantyRecord, String> PRODUCER = createField("producer", org.jooq.impl.SQLDataType.VARCHAR(45), this, "machine");

    /**
     * The column <code>bcinvest.Guaranty.model</code>. Machine
     */
    public final TableField<GuarantyRecord, String> MODEL = createField("model", org.jooq.impl.SQLDataType.VARCHAR(45), this, "Machine");

    /**
     * The column <code>bcinvest.Guaranty.used_days</code>. machine
     */
    public final TableField<GuarantyRecord, Integer> USED_DAYS = createField("used_days", org.jooq.impl.SQLDataType.INTEGER, this, "machine");

    /**
     * The column <code>bcinvest.Guaranty.address</code>. Land,home
     */
    public final TableField<GuarantyRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(45), this, "Land,home");

    /**
     * The column <code>bcinvest.Guaranty.area</code>. area
     */
    public final TableField<GuarantyRecord, String> AREA = createField("area", org.jooq.impl.SQLDataType.VARCHAR(45), this, "area");

    /**
     * The column <code>bcinvest.Guaranty.zip</code>. Home
     */
    public final TableField<GuarantyRecord, String> ZIP = createField("zip", org.jooq.impl.SQLDataType.VARCHAR(45), this, "Home");

    /**
     * The column <code>bcinvest.Guaranty.lock</code>.
     */
    public final TableField<GuarantyRecord, Byte> LOCK = createField("lock", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * Create a <code>bcinvest.Guaranty</code> table reference
     */
    public Guaranty() {
        this(DSL.name("Guaranty"), null);
    }

    /**
     * Create an aliased <code>bcinvest.Guaranty</code> table reference
     */
    public Guaranty(String alias) {
        this(DSL.name(alias), GUARANTY);
    }

    /**
     * Create an aliased <code>bcinvest.Guaranty</code> table reference
     */
    public Guaranty(Name alias) {
        this(alias, GUARANTY);
    }

    private Guaranty(Name alias, Table<GuarantyRecord> aliased) {
        this(alias, aliased, null);
    }

    private Guaranty(Name alias, Table<GuarantyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Bcinvest.BCINVEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GUARANTY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GuarantyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GUARANTY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GuarantyRecord> getPrimaryKey() {
        return Keys.KEY_GUARANTY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GuarantyRecord>> getKeys() {
        return Arrays.<UniqueKey<GuarantyRecord>>asList(Keys.KEY_GUARANTY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Guaranty as(String alias) {
        return new Guaranty(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Guaranty as(Name alias) {
        return new Guaranty(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Guaranty rename(String name) {
        return new Guaranty(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Guaranty rename(Name name) {
        return new Guaranty(name, null);
    }
}

/*
 * This file is generated by jOOQ.
*/
package com.generator.tables;


import com.generator.Bcinvest;
import com.generator.Indexes;
import com.generator.Keys;
import com.generator.tables.records.MachineRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Machine extends TableImpl<MachineRecord> {

    private static final long serialVersionUID = -712725492;

    /**
     * The reference instance of <code>bcinvest.machine</code>
     */
    public static final Machine MACHINE = new Machine();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MachineRecord> getRecordType() {
        return MachineRecord.class;
    }

    /**
     * The column <code>bcinvest.machine.UsedDays</code>.
     */
    public final TableField<MachineRecord, Integer> USEDDAYS = createField("UsedDays", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bcinvest.machine.Producer</code>.
     */
    public final TableField<MachineRecord, String> PRODUCER = createField("Producer", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>bcinvest.machine.Model</code>.
     */
    public final TableField<MachineRecord, String> MODEL = createField("Model", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>bcinvest.machine.GuarantyId</code>.
     */
    public final TableField<MachineRecord, Integer> GUARANTYID = createField("GuarantyId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>bcinvest.machine</code> table reference
     */
    public Machine() {
        this(DSL.name("machine"), null);
    }

    /**
     * Create an aliased <code>bcinvest.machine</code> table reference
     */
    public Machine(String alias) {
        this(DSL.name(alias), MACHINE);
    }

    /**
     * Create an aliased <code>bcinvest.machine</code> table reference
     */
    public Machine(Name alias) {
        this(alias, MACHINE);
    }

    private Machine(Name alias, Table<MachineRecord> aliased) {
        this(alias, aliased, null);
    }

    private Machine(Name alias, Table<MachineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Bcinvest.BCINVEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MACHINE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MachineRecord> getPrimaryKey() {
        return Keys.KEY_MACHINE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MachineRecord>> getKeys() {
        return Arrays.<UniqueKey<MachineRecord>>asList(Keys.KEY_MACHINE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MachineRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MachineRecord, ?>>asList(Keys.MACHINE_FK_GUARANTY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Machine as(String alias) {
        return new Machine(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Machine as(Name alias) {
        return new Machine(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Machine rename(String name) {
        return new Machine(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Machine rename(Name name) {
        return new Machine(name, null);
    }
}

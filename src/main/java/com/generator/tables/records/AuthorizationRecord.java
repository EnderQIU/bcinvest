/*
 * This file is generated by jOOQ.
*/
package com.generator.tables.records;


import com.generator.tables.Authorization;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorizationRecord extends UpdatableRecordImpl<AuthorizationRecord> implements Record5<String, Integer, String, String, String> {

    private static final long serialVersionUID = -132534657;

    /**
     * Setter for <code>bcinvest.Authorization.Name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>bcinvest.Authorization.Name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>bcinvest.Authorization.Type</code>.
     */
    public void setType(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>bcinvest.Authorization.Type</code>.
     */
    public Integer getType() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>bcinvest.Authorization.AccountNum</code>.
     */
    public void setAccountnum(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bcinvest.Authorization.AccountNum</code>.
     */
    public String getAccountnum() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bcinvest.Authorization.Token</code>.
     */
    public void setToken(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>bcinvest.Authorization.Token</code>.
     */
    public String getToken() {
        return (String) get(3);
    }

    /**
     * Setter for <code>bcinvest.Authorization.Password</code>.
     */
    public void setPassword(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>bcinvest.Authorization.Password</code>.
     */
    public String getPassword() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Integer, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Integer, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Authorization.AUTHORIZATION.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Authorization.AUTHORIZATION.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Authorization.AUTHORIZATION.ACCOUNTNUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Authorization.AUTHORIZATION.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Authorization.AUTHORIZATION.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getAccountnum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAccountnum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizationRecord value1(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizationRecord value2(Integer value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizationRecord value3(String value) {
        setAccountnum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizationRecord value4(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizationRecord value5(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthorizationRecord values(String value1, Integer value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthorizationRecord
     */
    public AuthorizationRecord() {
        super(Authorization.AUTHORIZATION);
    }

    /**
     * Create a detached, initialised AuthorizationRecord
     */
    public AuthorizationRecord(String name, Integer type, String accountnum, String token, String password) {
        super(Authorization.AUTHORIZATION);

        set(0, name);
        set(1, type);
        set(2, accountnum);
        set(3, token);
        set(4, password);
    }
}

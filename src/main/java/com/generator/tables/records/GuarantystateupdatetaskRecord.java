/*
 * This file is generated by jOOQ.
*/
package com.generator.tables.records;


import com.generator.tables.Guarantystateupdatetask;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GuarantystateupdatetaskRecord extends UpdatableRecordImpl<GuarantystateupdatetaskRecord> implements Record6<Integer, Integer, Integer, Integer, String, Integer> {

    private static final long serialVersionUID = 920368608;

    /**
     * Setter for <code>bcinvest.GuarantyStateUpdateTask.taskId</code>.
     */
    public void setTaskid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bcinvest.GuarantyStateUpdateTask.taskId</code>.
     */
    public Integer getTaskid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bcinvest.GuarantyStateUpdateTask.guarantyId</code>.
     */
    public void setGuarantyid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>bcinvest.GuarantyStateUpdateTask.guarantyId</code>.
     */
    public Integer getGuarantyid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>bcinvest.GuarantyStateUpdateTask.previousState</code>.
     */
    public void setPreviousstate(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>bcinvest.GuarantyStateUpdateTask.previousState</code>.
     */
    public Integer getPreviousstate() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>bcinvest.GuarantyStateUpdateTask.stateWillUpdateTo</code>.
     */
    public void setStatewillupdateto(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>bcinvest.GuarantyStateUpdateTask.stateWillUpdateTo</code>.
     */
    public Integer getStatewillupdateto() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>bcinvest.GuarantyStateUpdateTask.taskState</code>.
     */
    public void setTaskstate(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>bcinvest.GuarantyStateUpdateTask.taskState</code>.
     */
    public String getTaskstate() {
        return (String) get(4);
    }

    /**
     * Setter for <code>bcinvest.GuarantyStateUpdateTask.count</code>.
     */
    public void setCount(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>bcinvest.GuarantyStateUpdateTask.count</code>.
     */
    public Integer getCount() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Integer, String, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Integer, String, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Guarantystateupdatetask.GUARANTYSTATEUPDATETASK.TASKID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Guarantystateupdatetask.GUARANTYSTATEUPDATETASK.GUARANTYID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Guarantystateupdatetask.GUARANTYSTATEUPDATETASK.PREVIOUSSTATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Guarantystateupdatetask.GUARANTYSTATEUPDATETASK.STATEWILLUPDATETO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Guarantystateupdatetask.GUARANTYSTATEUPDATETASK.TASKSTATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Guarantystateupdatetask.GUARANTYSTATEUPDATETASK.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getTaskid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getGuarantyid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getPreviousstate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getStatewillupdateto();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getTaskstate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getTaskid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getGuarantyid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPreviousstate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getStatewillupdateto();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getTaskstate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GuarantystateupdatetaskRecord value1(Integer value) {
        setTaskid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GuarantystateupdatetaskRecord value2(Integer value) {
        setGuarantyid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GuarantystateupdatetaskRecord value3(Integer value) {
        setPreviousstate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GuarantystateupdatetaskRecord value4(Integer value) {
        setStatewillupdateto(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GuarantystateupdatetaskRecord value5(String value) {
        setTaskstate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GuarantystateupdatetaskRecord value6(Integer value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GuarantystateupdatetaskRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GuarantystateupdatetaskRecord
     */
    public GuarantystateupdatetaskRecord() {
        super(Guarantystateupdatetask.GUARANTYSTATEUPDATETASK);
    }

    /**
     * Create a detached, initialised GuarantystateupdatetaskRecord
     */
    public GuarantystateupdatetaskRecord(Integer taskid, Integer guarantyid, Integer previousstate, Integer statewillupdateto, String taskstate, Integer count) {
        super(Guarantystateupdatetask.GUARANTYSTATEUPDATETASK);

        set(0, taskid);
        set(1, guarantyid);
        set(2, previousstate);
        set(3, statewillupdateto);
        set(4, taskstate);
        set(5, count);
    }
}

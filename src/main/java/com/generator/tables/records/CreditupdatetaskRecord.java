/*
 * This file is generated by jOOQ.
*/
package com.generator.tables.records;


import com.generator.tables.Creditupdatetask;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreditupdatetaskRecord extends UpdatableRecordImpl<CreditupdatetaskRecord> implements Record5<Integer, String, Integer, Integer, String> {

    private static final long serialVersionUID = -1466553670;

    /**
     * Setter for <code>bcinvest.CreditUpdateTask.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bcinvest.CreditUpdateTask.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bcinvest.CreditUpdateTask.AccountNum</code>.
     */
    public void setAccountnum(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bcinvest.CreditUpdateTask.AccountNum</code>.
     */
    public String getAccountnum() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bcinvest.CreditUpdateTask.previousCredit</code>.
     */
    public void setPreviouscredit(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>bcinvest.CreditUpdateTask.previousCredit</code>.
     */
    public Integer getPreviouscredit() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>bcinvest.CreditUpdateTask.delta</code>.
     */
    public void setDelta(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>bcinvest.CreditUpdateTask.delta</code>.
     */
    public Integer getDelta() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>bcinvest.CreditUpdateTask.state</code>.
     */
    public void setState(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>bcinvest.CreditUpdateTask.state</code>.
     */
    public String getState() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Creditupdatetask.CREDITUPDATETASK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Creditupdatetask.CREDITUPDATETASK.ACCOUNTNUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Creditupdatetask.CREDITUPDATETASK.PREVIOUSCREDIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Creditupdatetask.CREDITUPDATETASK.DELTA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Creditupdatetask.CREDITUPDATETASK.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAccountnum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getPreviouscredit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getDelta();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAccountnum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPreviouscredit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getDelta();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditupdatetaskRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditupdatetaskRecord value2(String value) {
        setAccountnum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditupdatetaskRecord value3(Integer value) {
        setPreviouscredit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditupdatetaskRecord value4(Integer value) {
        setDelta(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditupdatetaskRecord value5(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditupdatetaskRecord values(Integer value1, String value2, Integer value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CreditupdatetaskRecord
     */
    public CreditupdatetaskRecord() {
        super(Creditupdatetask.CREDITUPDATETASK);
    }

    /**
     * Create a detached, initialised CreditupdatetaskRecord
     */
    public CreditupdatetaskRecord(Integer id, String accountnum, Integer previouscredit, Integer delta, String state) {
        super(Creditupdatetask.CREDITUPDATETASK);

        set(0, id);
        set(1, accountnum);
        set(2, previouscredit);
        set(3, delta);
        set(4, state);
    }
}

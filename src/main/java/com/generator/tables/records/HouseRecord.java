/*
 * This file is generated by jOOQ.
*/
package com.generator.tables.records;


import com.generator.tables.House;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HouseRecord extends UpdatableRecordImpl<HouseRecord> implements Record4<String, String, String, Integer> {

    private static final long serialVersionUID = 803970614;

    /**
     * Setter for <code>bcinvest.House.Addr</code>.
     */
    public void setAddr(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>bcinvest.House.Addr</code>.
     */
    public String getAddr() {
        return (String) get(0);
    }

    /**
     * Setter for <code>bcinvest.House.Zip</code>.
     */
    public void setZip(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>bcinvest.House.Zip</code>.
     */
    public String getZip() {
        return (String) get(1);
    }

    /**
     * Setter for <code>bcinvest.House.HousingCertificatedId</code>.
     */
    public void setHousingcertificatedid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>bcinvest.House.HousingCertificatedId</code>.
     */
    public String getHousingcertificatedid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>bcinvest.House.GuarantyId</code>.
     */
    public void setGuarantyid(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>bcinvest.House.GuarantyId</code>.
     */
    public Integer getGuarantyid() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return House.HOUSE.ADDR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return House.HOUSE.ZIP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return House.HOUSE.HOUSINGCERTIFICATEDID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return House.HOUSE.GUARANTYID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getAddr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getZip();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getHousingcertificatedid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getGuarantyid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getAddr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getZip();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getHousingcertificatedid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getGuarantyid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HouseRecord value1(String value) {
        setAddr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HouseRecord value2(String value) {
        setZip(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HouseRecord value3(String value) {
        setHousingcertificatedid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HouseRecord value4(Integer value) {
        setGuarantyid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HouseRecord values(String value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HouseRecord
     */
    public HouseRecord() {
        super(House.HOUSE);
    }

    /**
     * Create a detached, initialised HouseRecord
     */
    public HouseRecord(String addr, String zip, String housingcertificatedid, Integer guarantyid) {
        super(House.HOUSE);

        set(0, addr);
        set(1, zip);
        set(2, housingcertificatedid);
        set(3, guarantyid);
    }
}

/*
 * This file is generated by jOOQ.
*/
package com.generator.tables.records;


import com.generator.tables.Land;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LandRecord extends UpdatableRecordImpl<LandRecord> implements Record3<String, Long, Integer> {

    private static final long serialVersionUID = 1935317402;

    /**
     * Setter for <code>bcinvest.land.Addr</code>.
     */
    public void setAddr(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>bcinvest.land.Addr</code>.
     */
    public String getAddr() {
        return (String) get(0);
    }

    /**
     * Setter for <code>bcinvest.land.Area</code>.
     */
    public void setArea(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>bcinvest.land.Area</code>.
     */
    public Long getArea() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>bcinvest.land.GuarantyId</code>.
     */
    public void setGuarantyid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>bcinvest.land.GuarantyId</code>.
     */
    public Integer getGuarantyid() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Long, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Long, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Land.LAND.ADDR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Land.LAND.AREA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Land.LAND.GUARANTYID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getAddr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getArea();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getGuarantyid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getAddr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getArea();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getGuarantyid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LandRecord value1(String value) {
        setAddr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LandRecord value2(Long value) {
        setArea(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LandRecord value3(Integer value) {
        setGuarantyid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LandRecord values(String value1, Long value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LandRecord
     */
    public LandRecord() {
        super(Land.LAND);
    }

    /**
     * Create a detached, initialised LandRecord
     */
    public LandRecord(String addr, Long area, Integer guarantyid) {
        super(Land.LAND);

        set(0, addr);
        set(1, area);
        set(2, guarantyid);
    }
}

/*
 * This file is generated by jOOQ.
*/
package com.generator.tables.daos;


import com.generator.tables.Authorization;
import com.generator.tables.records.AuthorizationRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorizationDao extends DAOImpl<AuthorizationRecord, com.generator.tables.pojos.Authorization, String> {

    /**
     * Create a new AuthorizationDao without any configuration
     */
    public AuthorizationDao() {
        super(Authorization.AUTHORIZATION, com.generator.tables.pojos.Authorization.class);
    }

    /**
     * Create a new AuthorizationDao with an attached configuration
     */
    public AuthorizationDao(Configuration configuration) {
        super(Authorization.AUTHORIZATION, com.generator.tables.pojos.Authorization.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(com.generator.tables.pojos.Authorization object) {
        return object.getAccountnum();
    }

    /**
     * Fetch records that have <code>Name IN (values)</code>
     */
    public List<com.generator.tables.pojos.Authorization> fetchByName(String... values) {
        return fetch(Authorization.AUTHORIZATION.NAME, values);
    }

    /**
     * Fetch records that have <code>Type IN (values)</code>
     */
    public List<com.generator.tables.pojos.Authorization> fetchByType(Integer... values) {
        return fetch(Authorization.AUTHORIZATION.TYPE, values);
    }

    /**
     * Fetch records that have <code>AccountNum IN (values)</code>
     */
    public List<com.generator.tables.pojos.Authorization> fetchByAccountnum(String... values) {
        return fetch(Authorization.AUTHORIZATION.ACCOUNTNUM, values);
    }

    /**
     * Fetch a unique record that has <code>AccountNum = value</code>
     */
    public com.generator.tables.pojos.Authorization fetchOneByAccountnum(String value) {
        return fetchOne(Authorization.AUTHORIZATION.ACCOUNTNUM, value);
    }

    /**
     * Fetch records that have <code>Token IN (values)</code>
     */
    public List<com.generator.tables.pojos.Authorization> fetchByToken(String... values) {
        return fetch(Authorization.AUTHORIZATION.TOKEN, values);
    }

    /**
     * Fetch a unique record that has <code>Token = value</code>
     */
    public com.generator.tables.pojos.Authorization fetchOneByToken(String value) {
        return fetchOne(Authorization.AUTHORIZATION.TOKEN, value);
    }

    /**
     * Fetch records that have <code>Password IN (values)</code>
     */
    public List<com.generator.tables.pojos.Authorization> fetchByPassword(String... values) {
        return fetch(Authorization.AUTHORIZATION.PASSWORD, values);
    }
}

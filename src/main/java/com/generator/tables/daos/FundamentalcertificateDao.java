/*
 * This file is generated by jOOQ.
*/
package com.generator.tables.daos;


import com.generator.tables.Fundamentalcertificate;
import com.generator.tables.records.FundamentalcertificateRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FundamentalcertificateDao extends DAOImpl<FundamentalcertificateRecord, com.generator.tables.pojos.Fundamentalcertificate, String> {

    /**
     * Create a new FundamentalcertificateDao without any configuration
     */
    public FundamentalcertificateDao() {
        super(Fundamentalcertificate.FUNDAMENTALCERTIFICATE, com.generator.tables.pojos.Fundamentalcertificate.class);
    }

    /**
     * Create a new FundamentalcertificateDao with an attached configuration
     */
    public FundamentalcertificateDao(Configuration configuration) {
        super(Fundamentalcertificate.FUNDAMENTALCERTIFICATE, com.generator.tables.pojos.Fundamentalcertificate.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(com.generator.tables.pojos.Fundamentalcertificate object) {
        return object.getAccountnum();
    }

    /**
     * Fetch records that have <code>BusinessLicenceNum IN (values)</code>
     */
    public List<com.generator.tables.pojos.Fundamentalcertificate> fetchByBusinesslicencenum(String... values) {
        return fetch(Fundamentalcertificate.FUNDAMENTALCERTIFICATE.BUSINESSLICENCENUM, values);
    }

    /**
     * Fetch records that have <code>StartDate IN (values)</code>
     */
    public List<com.generator.tables.pojos.Fundamentalcertificate> fetchByStartdate(LocalDateTime... values) {
        return fetch(Fundamentalcertificate.FUNDAMENTALCERTIFICATE.STARTDATE, values);
    }

    /**
     * Fetch records that have <code>EndDate IN (values)</code>
     */
    public List<com.generator.tables.pojos.Fundamentalcertificate> fetchByEnddate(LocalDateTime... values) {
        return fetch(Fundamentalcertificate.FUNDAMENTALCERTIFICATE.ENDDATE, values);
    }

    /**
     * Fetch records that have <code>BusinessRegistrationNo IN (values)</code>
     */
    public List<com.generator.tables.pojos.Fundamentalcertificate> fetchByBusinessregistrationno(String... values) {
        return fetch(Fundamentalcertificate.FUNDAMENTALCERTIFICATE.BUSINESSREGISTRATIONNO, values);
    }

    /**
     * Fetch records that have <code>RegisteredCapital IN (values)</code>
     */
    public List<com.generator.tables.pojos.Fundamentalcertificate> fetchByRegisteredcapital(Long... values) {
        return fetch(Fundamentalcertificate.FUNDAMENTALCERTIFICATE.REGISTEREDCAPITAL, values);
    }

    /**
     * Fetch records that have <code>MainBusinessScope IN (values)</code>
     */
    public List<com.generator.tables.pojos.Fundamentalcertificate> fetchByMainbusinessscope(String... values) {
        return fetch(Fundamentalcertificate.FUNDAMENTALCERTIFICATE.MAINBUSINESSSCOPE, values);
    }

    /**
     * Fetch records that have <code>OperationType IN (values)</code>
     */
    public List<com.generator.tables.pojos.Fundamentalcertificate> fetchByOperationtype(Integer... values) {
        return fetch(Fundamentalcertificate.FUNDAMENTALCERTIFICATE.OPERATIONTYPE, values);
    }

    /**
     * Fetch records that have <code>AccountNum IN (values)</code>
     */
    public List<com.generator.tables.pojos.Fundamentalcertificate> fetchByAccountnum(String... values) {
        return fetch(Fundamentalcertificate.FUNDAMENTALCERTIFICATE.ACCOUNTNUM, values);
    }

    /**
     * Fetch a unique record that has <code>AccountNum = value</code>
     */
    public com.generator.tables.pojos.Fundamentalcertificate fetchOneByAccountnum(String value) {
        return fetchOne(Fundamentalcertificate.FUNDAMENTALCERTIFICATE.ACCOUNTNUM, value);
    }
}

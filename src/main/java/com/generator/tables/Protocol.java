/*
 * This file is generated by jOOQ.
*/
package com.generator.tables;


import com.generator.Bcinvest;
import com.generator.Indexes;
import com.generator.Keys;
import com.generator.tables.records.ProtocolRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Protocol extends TableImpl<ProtocolRecord> {

    private static final long serialVersionUID = 630534663;

    /**
     * The reference instance of <code>bcinvest.Protocol</code>
     */
    public static final Protocol PROTOCOL = new Protocol();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProtocolRecord> getRecordType() {
        return ProtocolRecord.class;
    }

    /**
     * The column <code>bcinvest.Protocol.id</code>.
     */
    public final TableField<ProtocolRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bcinvest.Protocol.company_id</code>.
     */
    public final TableField<ProtocolRecord, String> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Protocol.guaranty_id</code>.
     */
    public final TableField<ProtocolRecord, String> GUARANTY_ID = createField("guaranty_id", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Protocol.create_time</code>.
     */
    public final TableField<ProtocolRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>bcinvest.Protocol.duration</code>.
     */
    public final TableField<ProtocolRecord, String> DURATION = createField("duration", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Protocol.end_time</code>.
     */
    public final TableField<ProtocolRecord, String> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Protocol.content</code>.
     */
    public final TableField<ProtocolRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Protocol.status</code>.
     */
    public final TableField<ProtocolRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>bcinvest.Protocol.lock</code>.
     */
    public final TableField<ProtocolRecord, Byte> LOCK = createField("lock", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * Create a <code>bcinvest.Protocol</code> table reference
     */
    public Protocol() {
        this(DSL.name("Protocol"), null);
    }

    /**
     * Create an aliased <code>bcinvest.Protocol</code> table reference
     */
    public Protocol(String alias) {
        this(DSL.name(alias), PROTOCOL);
    }

    /**
     * Create an aliased <code>bcinvest.Protocol</code> table reference
     */
    public Protocol(Name alias) {
        this(alias, PROTOCOL);
    }

    private Protocol(Name alias, Table<ProtocolRecord> aliased) {
        this(alias, aliased, null);
    }

    private Protocol(Name alias, Table<ProtocolRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Bcinvest.BCINVEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PROTOCOL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProtocolRecord> getPrimaryKey() {
        return Keys.KEY_PROTOCOL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProtocolRecord>> getKeys() {
        return Arrays.<UniqueKey<ProtocolRecord>>asList(Keys.KEY_PROTOCOL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Protocol as(String alias) {
        return new Protocol(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Protocol as(Name alias) {
        return new Protocol(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Protocol rename(String name) {
        return new Protocol(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Protocol rename(Name name) {
        return new Protocol(name, null);
    }
}

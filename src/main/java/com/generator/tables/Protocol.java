/*
 * This file is generated by jOOQ.
*/
package com.generator.tables;


import com.generator.Bcinvest;
import com.generator.Indexes;
import com.generator.Keys;
import com.generator.tables.records.ProtocolRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Protocol extends TableImpl<ProtocolRecord> {

    private static final long serialVersionUID = 728848519;

    /**
     * The reference instance of <code>bcinvest.Protocol</code>
     */
    public static final Protocol PROTOCOL = new Protocol();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProtocolRecord> getRecordType() {
        return ProtocolRecord.class;
    }

    /**
     * The column <code>bcinvest.Protocol.ProtocolId</code>.
     */
    public final TableField<ProtocolRecord, Integer> PROTOCOLID = createField("ProtocolId", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>bcinvest.Protocol.GurantyId</code>.
     */
    public final TableField<ProtocolRecord, Integer> GURANTYID = createField("GurantyId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bcinvest.Protocol.StartDate</code>.
     */
    public final TableField<ProtocolRecord, LocalDate> STARTDATE = createField("StartDate", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>bcinvest.Protocol.Duration</code>.
     */
    public final TableField<ProtocolRecord, String> DURATION = createField("Duration", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>bcinvest.Protocol.EndDate</code>.
     */
    public final TableField<ProtocolRecord, LocalDate> ENDDATE = createField("EndDate", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>bcinvest.Protocol.Message</code>.
     */
    public final TableField<ProtocolRecord, String> MESSAGE = createField("Message", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>bcinvest.Protocol.Condition</code>.
     */
    public final TableField<ProtocolRecord, String> CONDITION = createField("Condition", org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * Create a <code>bcinvest.Protocol</code> table reference
     */
    public Protocol() {
        this(DSL.name("Protocol"), null);
    }

    /**
     * Create an aliased <code>bcinvest.Protocol</code> table reference
     */
    public Protocol(String alias) {
        this(DSL.name(alias), PROTOCOL);
    }

    /**
     * Create an aliased <code>bcinvest.Protocol</code> table reference
     */
    public Protocol(Name alias) {
        this(alias, PROTOCOL);
    }

    private Protocol(Name alias, Table<ProtocolRecord> aliased) {
        this(alias, aliased, null);
    }

    private Protocol(Name alias, Table<ProtocolRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Bcinvest.BCINVEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PROTOCOL_FK_PROTOCOL_TO_GURANTY, Indexes.PROTOCOL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProtocolRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROTOCOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProtocolRecord> getPrimaryKey() {
        return Keys.KEY_PROTOCOL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProtocolRecord>> getKeys() {
        return Arrays.<UniqueKey<ProtocolRecord>>asList(Keys.KEY_PROTOCOL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProtocolRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProtocolRecord, ?>>asList(Keys.FK_PROTOCOL_TO_GURANTY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Protocol as(String alias) {
        return new Protocol(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Protocol as(Name alias) {
        return new Protocol(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Protocol rename(String name) {
        return new Protocol(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Protocol rename(Name name) {
        return new Protocol(name, null);
    }
}

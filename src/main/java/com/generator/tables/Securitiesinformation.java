/*
 * This file is generated by jOOQ.
*/
package com.generator.tables;


import com.generator.Bcinvest;
import com.generator.Indexes;
import com.generator.Keys;
import com.generator.tables.records.SecuritiesinformationRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Securitiesinformation extends TableImpl<SecuritiesinformationRecord> {

    private static final long serialVersionUID = -1682059282;

    /**
     * The reference instance of <code>bcinvest.securitiesinformation</code>
     */
    public static final Securitiesinformation SECURITIESINFORMATION = new Securitiesinformation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SecuritiesinformationRecord> getRecordType() {
        return SecuritiesinformationRecord.class;
    }

    /**
     * The column <code>bcinvest.securitiesinformation.AccountNum</code>.
     */
    public final TableField<SecuritiesinformationRecord, String> ACCOUNTNUM = createField("AccountNum", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>bcinvest.securitiesinformation.StockCode</code>.
     */
    public final TableField<SecuritiesinformationRecord, String> STOCKCODE = createField("StockCode", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>bcinvest.securitiesinformation.ListedApproval</code>.
     */
    public final TableField<SecuritiesinformationRecord, String> LISTEDAPPROVAL = createField("ListedApproval", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>bcinvest.securitiesinformation.StockAbbr</code>.
     */
    public final TableField<SecuritiesinformationRecord, String> STOCKABBR = createField("StockAbbr", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>bcinvest.securitiesinformation.IssuePrice</code>.
     */
    public final TableField<SecuritiesinformationRecord, Long> ISSUEPRICE = createField("IssuePrice", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>bcinvest.securitiesinformation.StockType</code>.
     */
    public final TableField<SecuritiesinformationRecord, Integer> STOCKTYPE = createField("StockType", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bcinvest.securitiesinformation.LaunchDate</code>.
     */
    public final TableField<SecuritiesinformationRecord, LocalDateTime> LAUNCHDATE = createField("LaunchDate", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>bcinvest.securitiesinformation.Circulation</code>.
     */
    public final TableField<SecuritiesinformationRecord, Long> CIRCULATION = createField("Circulation", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>bcinvest.securitiesinformation.IsValid</code>.
     */
    public final TableField<SecuritiesinformationRecord, Byte> ISVALID = createField("IsValid", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bcinvest.securitiesinformation.Remark</code>.
     */
    public final TableField<SecuritiesinformationRecord, String> REMARK = createField("Remark", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * Create a <code>bcinvest.securitiesinformation</code> table reference
     */
    public Securitiesinformation() {
        this(DSL.name("securitiesinformation"), null);
    }

    /**
     * Create an aliased <code>bcinvest.securitiesinformation</code> table reference
     */
    public Securitiesinformation(String alias) {
        this(DSL.name(alias), SECURITIESINFORMATION);
    }

    /**
     * Create an aliased <code>bcinvest.securitiesinformation</code> table reference
     */
    public Securitiesinformation(Name alias) {
        this(alias, SECURITIESINFORMATION);
    }

    private Securitiesinformation(Name alias, Table<SecuritiesinformationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Securitiesinformation(Name alias, Table<SecuritiesinformationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Bcinvest.BCINVEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SECURITIESINFORMATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SecuritiesinformationRecord> getPrimaryKey() {
        return Keys.KEY_SECURITIESINFORMATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SecuritiesinformationRecord>> getKeys() {
        return Arrays.<UniqueKey<SecuritiesinformationRecord>>asList(Keys.KEY_SECURITIESINFORMATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SecuritiesinformationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SecuritiesinformationRecord, ?>>asList(Keys.SECURITIESINFORMATION_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Securitiesinformation as(String alias) {
        return new Securitiesinformation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Securitiesinformation as(Name alias) {
        return new Securitiesinformation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Securitiesinformation rename(String name) {
        return new Securitiesinformation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Securitiesinformation rename(Name name) {
        return new Securitiesinformation(name, null);
    }
}

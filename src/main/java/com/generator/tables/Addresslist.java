/*
 * This file is generated by jOOQ.
*/
package com.generator.tables;


import com.generator.Bcinvest;
import com.generator.Indexes;
import com.generator.Keys;
import com.generator.tables.records.AddresslistRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Addresslist extends TableImpl<AddresslistRecord> {

    private static final long serialVersionUID = 1626472724;

    /**
     * The reference instance of <code>bcinvest.addresslist</code>
     */
    public static final Addresslist ADDRESSLIST = new Addresslist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AddresslistRecord> getRecordType() {
        return AddresslistRecord.class;
    }

    /**
     * The column <code>bcinvest.addresslist.address</code>.
     */
    public final TableField<AddresslistRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false), this, "");

    /**
     * Create a <code>bcinvest.addresslist</code> table reference
     */
    public Addresslist() {
        this(DSL.name("addresslist"), null);
    }

    /**
     * Create an aliased <code>bcinvest.addresslist</code> table reference
     */
    public Addresslist(String alias) {
        this(DSL.name(alias), ADDRESSLIST);
    }

    /**
     * Create an aliased <code>bcinvest.addresslist</code> table reference
     */
    public Addresslist(Name alias) {
        this(alias, ADDRESSLIST);
    }

    private Addresslist(Name alias, Table<AddresslistRecord> aliased) {
        this(alias, aliased, null);
    }

    private Addresslist(Name alias, Table<AddresslistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Bcinvest.BCINVEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ADDRESSLIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AddresslistRecord> getPrimaryKey() {
        return Keys.KEY_ADDRESSLIST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AddresslistRecord>> getKeys() {
        return Arrays.<UniqueKey<AddresslistRecord>>asList(Keys.KEY_ADDRESSLIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Addresslist as(String alias) {
        return new Addresslist(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Addresslist as(Name alias) {
        return new Addresslist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Addresslist rename(String name) {
        return new Addresslist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Addresslist rename(Name name) {
        return new Addresslist(name, null);
    }
}

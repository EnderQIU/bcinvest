/*
 * This file is generated by jOOQ.
*/
package com.bcgenerator.tables;


import com.bcgenerator.Blockchain;
import com.bcgenerator.Indexes;
import com.bcgenerator.Keys;
import com.bcgenerator.tables.records.CreditDataRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreditData extends TableImpl<CreditDataRecord> {

    private static final long serialVersionUID = -22105994;

    /**
     * The reference instance of <code>blockchain.credit_data</code>
     */
    public static final CreditData CREDIT_DATA = new CreditData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CreditDataRecord> getRecordType() {
        return CreditDataRecord.class;
    }

    /**
     * The column <code>blockchain.credit_data.block_hash</code>.
     */
    public final TableField<CreditDataRecord, String> BLOCK_HASH = createField("block_hash", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>blockchain.credit_data.id</code>.
     */
    public final TableField<CreditDataRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>blockchain.credit_data.variation</code>.
     */
    public final TableField<CreditDataRecord, String> VARIATION = createField("variation", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>blockchain.credit_data.value</code>.
     */
    public final TableField<CreditDataRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>blockchain.credit_data.remarks</code>.
     */
    public final TableField<CreditDataRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * Create a <code>blockchain.credit_data</code> table reference
     */
    public CreditData() {
        this(DSL.name("credit_data"), null);
    }

    /**
     * Create an aliased <code>blockchain.credit_data</code> table reference
     */
    public CreditData(String alias) {
        this(DSL.name(alias), CREDIT_DATA);
    }

    /**
     * Create an aliased <code>blockchain.credit_data</code> table reference
     */
    public CreditData(Name alias) {
        this(alias, CREDIT_DATA);
    }

    private CreditData(Name alias, Table<CreditDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private CreditData(Name alias, Table<CreditDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Blockchain.BLOCKCHAIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CREDIT_DATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CreditDataRecord> getPrimaryKey() {
        return Keys.KEY_CREDIT_DATA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CreditDataRecord>> getKeys() {
        return Arrays.<UniqueKey<CreditDataRecord>>asList(Keys.KEY_CREDIT_DATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CreditDataRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CreditDataRecord, ?>>asList(Keys.CREDIT_DATA_CHAIN_THIS_HASH_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditData as(String alias) {
        return new CreditData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CreditData as(Name alias) {
        return new CreditData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CreditData rename(String name) {
        return new CreditData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CreditData rename(Name name) {
        return new CreditData(name, null);
    }
}
